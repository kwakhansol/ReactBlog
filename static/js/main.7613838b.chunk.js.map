{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["Modal","props","className","글제목","누른제목","App","useState","글제목변경","발행날짜","따봉","따봉변경","modal","modal변경","누른제목변경","입력값","입력값변경","style","color","fontSize","map","글","i","onClick","onChange","e","target","value","arrayCopy","unshift","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAAe,I,YCuDf,SAASA,EAAMC,GACX,OACI,sBAAKC,UAAY,QAAjB,UACA,mCAAOD,EAAME,mBAAIF,EAAMG,0BAAvB,OACA,2DACA,kDAKOC,MA3Df,WAEI,IAFW,EAIQC,mBAAS,CAAC,0CAAa,6DAAiB,gEAAe,uEAAiB,qDAJhF,mBAINH,EAJM,KAIDI,EAJC,OAKUD,mBAAS,CAAC,+BAAY,+BAAY,+BAAY,+BAAY,iCALpE,mBAKNE,EALM,aAMMF,mBAAS,IANf,mBAMNG,EANM,KAMFC,EANE,OAOYJ,oBAAS,GAPrB,mBAONK,EAPM,KAOCC,EAPD,OAQUN,mBAAS,GARnB,mBAQNF,EARM,KAQAS,EARA,OASQP,mBAAS,IATjB,mBASNQ,EATM,KASDC,EATC,KAWX,OACI,sBAAKb,UAAY,MAAjB,UACI,qBAAKA,UAAY,YAAjB,SACI,qBAAKc,MAXF,CAAEC,MAAO,QAASC,SAAU,QAW/B,kCAIPf,EAAIgB,KAAI,SAASC,EAAGC,GACb,OACI,sBAAKnB,UAAY,OAAjB,UACI,qBAAIoB,QAAW,WAAQT,EAAOQ,IAA9B,cAAyCD,EACzC,sBAAME,QAAW,WAAQZ,EAAKD,EAAK,IAAnC,wCACCA,KACD,kCAAMD,EAAKa,GAAX,QACA,yBAL4BA,MAW5C,sBAAKnB,UAAY,UAAjB,UACI,qBAAKA,UAAY,QAAjB,kCACI,uBAAOqB,SAAa,SAACC,GAAQT,EAAMS,EAAEC,OAAOC,UAC5C,wBAAQJ,QAAW,WAAQ,IAAIK,EAAS,YAAOxB,GAAMwB,EAAUC,QAAQd,GAAMP,EAAMoB,IAAnF,+BAtBR,IA4BA,uBACA,wBAAQzB,UAAY,YAAYoB,QAAY,WAAQV,GAASD,IAA7D,yCACe,IAAVA,EACG,cAACX,EAAD,CAAOG,qBAAQA,EACnBC,2BAASA,EADL,eACwB,SCtCzByB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7613838b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","/* eslint-disable */\n\nimport React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n\n    let posts = '강남고기맛집';\n    let navStyle = { color: 'white', fontSize: '30px' };\n    let [글제목, 글제목변경] = useState(['남자 코트  추천', '3월4일 예진이네 놀러옴', '어제는 삼겹살데이였음', '다이어트 어떻게하는거죠?', '점심메뉴추천받음']);\n    let [발행날짜, 발행날짜변경] = useState(['2월17일 발행', '3월 3일 발행', '3월 4일 발행', '3월 3일 발행', '3월 6일 발행']);\n    let [따봉, 따봉변경] = useState(0);\n    let [modal, modal변경] = useState(false); // 모달창을 켜고 닫는 스위치로 false값을,,\n    let [누른제목, 누른제목변경] = useState(0);\n    let [입력값, 입력값변경] = useState('');\n\n    return (\n        <div className = \"App\" >\n            <div className = \"black-nav\" >\n                <div style = { navStyle } > 개발 Blog\n                </div>\n            </div>\n\n        {글제목.map(function(글, i) {\n                return ( \n                    <div className = \"list\" key = { i }>\n                        <h4 onClick = {() => { 누른제목변경(i) } } > { 글 } \n                        <span onClick = {() => { 따봉변경(따봉 + 1) } } > 👍🏻 </span>\n                        {따봉}</h4>\n                        <p> { 발행날짜[i] }  </p> \n                        <hr />\n                    </div>\n                )\n            })\n        }\n\n        <div className = \"publish\" >\n            <div className = \"write\" > 글쓰기 </div>\n                <input onChange = { (e) => { 입력값변경(e.target.value) } }/> \n                <button onClick = {() => { var arrayCopy = [...글제목]; arrayCopy.unshift(입력값); 글제목변경(arrayCopy);}}> 저장 </button>\n        </div> {\n            /* {입력값}  \n                <input onChange={ (e) => {입력값변경(e.target.value)}}/> */\n        }\n\n        <hr />\n        <button className = \"detailBtn\" onClick = { () => { modal변경(!modal) } } > 열고닫기 </button> \n            {modal === true ?\n                <Modal 글제목 = { 글제목 }\n            누른제목 = { 누른제목 } > </Modal>: null} \n        </div>\n    );\n}\n\nfunction Modal(props) {\n    return (\n        <div className = \"modal\" >\n        <h2> { props.글제목[props.누른제목] } </h2>\n        <p> 발행날짜 </p>\n        <p> 내용 </p>\n        </div>\n    )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}